{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Logach Project for UP discipline from FSPO ITMO","title":"Home"},{"location":"#logach","text":"Project for UP discipline from FSPO ITMO","title":"Logach"},{"location":"back/","text":"Logach backend Scheme Models class Task(models.Model): number = models.PositiveIntegerField() # \u043d\u043e\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u0438\u044f - \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u043e\u0442\u0438\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e theme = models.CharField(max_length=30) # \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u044f \u0442\u0435\u043c\u0430 name = models.CharField(max_length=300) # \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u044f description = models.CharField(max_length=2000, blank=True) # \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u0438\u044f answer = models.JSONField() # \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 class Logik(AbstractUser): # \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 \u0414\u0436\u0430\u043d\u0433\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u042e\u0437\u0435\u0440\u0430 tasks = models.ManyToManyField(Task, through='LogikTask') # \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043a \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u043c\u0438 REQUIRED_FIELDS = ['email', 'first_name', 'last_name'] # \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f u_logik = get_user_model() class LogikTask(models.Model): SOLVED = [ ('0', 'No'), ('1', 'Yes') ] logik = models.ForeignKey(u_logik, on_delete=models.CASCADE) # \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 task = models.ForeignKey(Task, on_delete=models.CASCADE) # \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 accept_date = models.DateTimeField() # \u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 answer = models.JSONField(default=dict, blank = True) # \u043e\u0442\u0432\u0435\u0442 \u043b\u043e\u0433\u0438\u043a\u0430 solved = models.CharField(max_length=1, choices=SOLVED) # \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043b\u0438 \u0440\u0435\u0448\u0435\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0435. \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u0432\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 - \u0434\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442. Urls path('admin/', admin.site.urls), # \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0411\u0414 path('api/', include('logach_1.urls')), # Api \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0430 path('auth/', include('djoser.urls')), # \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Djoser \u0438 \u043e\u0431\u043a\u043d\u043e\u0432\u0435\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d path('auth/', include('djoser.urls.authtoken')), # \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Djoser \u0438 \u043e\u0431\u043a\u043d\u043e\u0432\u0435\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d path('logik/all', LogikListView.as_view()), # \u0432\u0441\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u043d\u043d\u044b\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 path('logik/<int:pk>', LogikOneView.as_view()), # \u0432\u044b\u0431\u043e\u0440 \u043f\u043e id \u043b\u043e\u0433\u0438\u043a\u0430 path('task/all', TaskListView.as_view()), # \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f path('task/<int:pk>', TaskOneView.as_view()), # \u0432\u044b\u0431\u043e\u0440 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0435\u0433\u043e id path('task/update/<int:pk>', UpdateTaskListView.as_view()), # \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0435\u0433\u043e id path('task/new', CreateTaskListView.as_view()), # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f path('usertask/all', LogikTaskListView.as_view()), # \u0432\u0441\u0435 \u043e\u0442\u0432\u0435\u0442\u044b \u043b\u043e\u0433\u0438\u043a\u043e\u0432 path('usertask/<int:pk>', LogikTaskOneView.as_view()), # \u0432\u044b\u0431\u043e\u0440 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id path('usertask/update/<int:pk>', UpdateLogikTaskListView.as_view()), # \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id path('usertask/drop/<int:pk>', DropLogikTask.as_view()), # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id path('usertask/new', CreateLogikTaskListView.as_view()), # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430","title":"Backend"},{"location":"back/#logach-backend","text":"","title":"Logach backend"},{"location":"back/#scheme","text":"","title":"Scheme"},{"location":"back/#models","text":"class Task(models.Model): number = models.PositiveIntegerField() # \u043d\u043e\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u043d\u0438\u044f - \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u043e\u0442\u0438\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e theme = models.CharField(max_length=30) # \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0435\u0441\u0442\u044c \u0441\u0432\u043e\u044f \u0442\u0435\u043c\u0430 name = models.CharField(max_length=300) # \u0444\u043e\u0440\u043c\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u044f description = models.CharField(max_length=2000, blank=True) # \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u044f \u0447\u0430\u0441\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u0438\u044f answer = models.JSONField() # \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 class Logik(AbstractUser): # \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 \u0414\u0436\u0430\u043d\u0433\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u042e\u0437\u0435\u0440\u0430 tasks = models.ManyToManyField(Task, through='LogikTask') # \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0435 \u043c\u043d\u043e\u0433\u0438\u0435 \u043a\u043e \u043c\u043d\u043e\u0433\u0438\u043c \u043a \u0442\u0430\u0431\u043b\u0438\u0446\u0435 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u044f\u043c\u0438 REQUIRED_FIELDS = ['email', 'first_name', 'last_name'] # \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f u_logik = get_user_model() class LogikTask(models.Model): SOLVED = [ ('0', 'No'), ('1', 'Yes') ] logik = models.ForeignKey(u_logik, on_delete=models.CASCADE) # \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 task = models.ForeignKey(Task, on_delete=models.CASCADE) # \u0432\u043d\u0435\u0448\u043d\u0438\u0435 \u043a\u043b\u044e\u0447\u0438 accept_date = models.DateTimeField() # \u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043f\u0440\u0438\u043d\u044f\u0442\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043d\u0430 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 answer = models.JSONField(default=dict, blank = True) # \u043e\u0442\u0432\u0435\u0442 \u043b\u043e\u0433\u0438\u043a\u0430 solved = models.CharField(max_length=1, choices=SOLVED) # \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u043b\u0438 \u0440\u0435\u0448\u0435\u043d\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u0435. \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0434\u0432\u0430 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430 - \u0434\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442.","title":"Models"},{"location":"back/#urls","text":"path('admin/', admin.site.urls), # \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0411\u0414 path('api/', include('logach_1.urls')), # Api \u0434\u043b\u044f \u0444\u0440\u043e\u043d\u0442\u0430 path('auth/', include('djoser.urls')), # \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Djoser \u0438 \u043e\u0431\u043a\u043d\u043e\u0432\u0435\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d path('auth/', include('djoser.urls.authtoken')), # \u0410\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Djoser \u0438 \u043e\u0431\u043a\u043d\u043e\u0432\u0435\u043d\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d path('logik/all', LogikListView.as_view()), # \u0432\u0441\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u043d\u043d\u044b\u0435 \u043d\u0430 \u0441\u0430\u0439\u0442\u0435 \u043b\u043e\u0433\u0438\u043a\u0438 path('logik/<int:pk>', LogikOneView.as_view()), # \u0432\u044b\u0431\u043e\u0440 \u043f\u043e id \u043b\u043e\u0433\u0438\u043a\u0430 path('task/all', TaskListView.as_view()), # \u0432\u0441\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u044f path('task/<int:pk>', TaskOneView.as_view()), # \u0432\u044b\u0431\u043e\u0440 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0435\u0433\u043e id path('task/update/<int:pk>', UpdateTaskListView.as_view()), # \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0435\u0439 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043f\u043e \u0435\u0433\u043e id path('task/new', CreateTaskListView.as_view()), # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u0434\u0430\u043d\u0438\u044f path('usertask/all', LogikTaskListView.as_view()), # \u0432\u0441\u0435 \u043e\u0442\u0432\u0435\u0442\u044b \u043b\u043e\u0433\u0438\u043a\u043e\u0432 path('usertask/<int:pk>', LogikTaskOneView.as_view()), # \u0432\u044b\u0431\u043e\u0440 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id path('usertask/update/<int:pk>', UpdateLogikTaskListView.as_view()), # \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id path('usertask/drop/<int:pk>', DropLogikTask.as_view()), # \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u043f\u043e \u0435\u0433\u043e id path('usertask/new', CreateLogikTaskListView.as_view()), # \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043e\u0442\u0432\u0435\u0442\u0430","title":"Urls"},{"location":"front/","text":"Logach frontend Register \u0427\u0442\u043e\u0431\u044b \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0434\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044e, \u043d\u0438\u043a\u043d\u0435\u0439\u043c, \u043f\u043e\u0447\u0442\u0443 \u0438 \u043f\u0430\u0440\u043e\u043b\u044c. \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043c\u043e\u0436\u0435\u0442 \u0432\u043e\u0439\u0442\u0438 \u043d\u0430 \u0441\u0430\u0439\u0442. Login \u0414\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442 \u043d\u0430\u0434\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0432 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0438\u043a\u043d\u0435\u0439\u043c \u0438 \u043f\u0430\u0440\u043e\u043b\u044c. Profile \u0412 \u043f\u0440\u043e\u0444\u0438\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. Theory \u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0442\u0435\u043e\u0440\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u0441\u044f \u0441 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0440\u0435\u0448\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0443. Practice \u0414\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0444\u043e\u0440\u043c\u0443 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u043e\u0442\u0432\u0435\u0442\u0430\u043c\u0438. \u041f\u043e\u0441\u043b\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442\u0441\u044f \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. Table \u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0432\u0438\u0434\u0438\u0442 \u0441\u0432\u043e\u0438 \u0443\u0441\u043f\u0435\u0445\u0438 \u0432 \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u0438 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u0443\u0441\u043f\u0435\u0445\u0438 \u0434\u0440\u0443\u0433\u0438\u0445.","title":"Frontend"},{"location":"front/#logach-frontend","text":"","title":"Logach frontend"},{"location":"front/#register","text":"\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430\u0434\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0438\u043c\u044f, \u0444\u0430\u043c\u0438\u043b\u0438\u044e, \u043d\u0438\u043a\u043d\u0435\u0439\u043c, \u043f\u043e\u0447\u0442\u0443 \u0438 \u043f\u0430\u0440\u043e\u043b\u044c. \u041f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043c\u043e\u0436\u0435\u0442 \u0432\u043e\u0439\u0442\u0438 \u043d\u0430 \u0441\u0430\u0439\u0442.","title":"Register"},{"location":"front/#login","text":"\u0414\u043b\u044f \u0432\u0445\u043e\u0434\u0430 \u043d\u0430 \u0441\u0430\u0439\u0442 \u043d\u0430\u0434\u043e \u0432\u0432\u0435\u0441\u0442\u0438 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0432 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0438\u043a\u043d\u0435\u0439\u043c \u0438 \u043f\u0430\u0440\u043e\u043b\u044c.","title":"Login"},{"location":"front/#profile","text":"\u0412 \u043f\u0440\u043e\u0444\u0438\u043b\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.","title":"Profile"},{"location":"front/#theory","text":"\u041d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0442\u0435\u043e\u0440\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u0441\u044f \u0441 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043c\u043e\u0436\u0435\u0442 \u0440\u0435\u0448\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0443.","title":"Theory"},{"location":"front/#practice","text":"\u0414\u043b\u044f \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438 \u043d\u0443\u0436\u043d\u043e \u0437\u0430\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0444\u043e\u0440\u043c\u0443 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u043e\u0442\u0432\u0435\u0442\u0430\u043c\u0438. \u041f\u043e\u0441\u043b\u0435 \u043d\u0430\u0436\u0430\u0442\u0438\u044f \u043a\u043d\u043e\u043f\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442\u0441\u044f \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.","title":"Practice"},{"location":"front/#table","text":"\u041d\u0430 \u0441\u0430\u0439\u0442\u0435 \u0435\u0441\u0442\u044c \u0441\u0440\u0430\u0432\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u0433\u0434\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0432\u0438\u0434\u0438\u0442 \u0441\u0432\u043e\u0438 \u0443\u0441\u043f\u0435\u0445\u0438 \u0432 \u043e\u0441\u0432\u043e\u0435\u043d\u0438\u0438 \u043b\u043e\u0433\u0438\u043a\u0438 \u0438 \u0443\u0441\u043f\u0435\u0445\u0438 \u0434\u0440\u0443\u0433\u0438\u0445.","title":"Table"}]}